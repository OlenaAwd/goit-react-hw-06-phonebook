{"version":3,"sources":["components/FilterForm/FilterForm.module.css","components/Container/Container.module.css","components/Container/Container.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/FilterForm/FilterForm.jsx","components/App.jsx","redux/contacts/contacts-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","css","container","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getContacts","state","phonebook","items","getFilter","filter","getAddedContacts","contacts","normalizedFilter","toLowerCase","contact","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","nameId","useRef","numberId","handleChange","e","target","value","form","onSubmit","preventDefault","find","con","toast","icon","style","borderRadius","background","color","label","htmlFor","current","inputName","type","onChange","placeholder","inputNumber","button","ContactList","addedContacts","list","map","listItem","listItemText","onClick","onRemoveContact","Filter","filterLabel","filterInput","App","length","position","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","rootReducer","persistReducer","contactsReducer","store","configureStore","reducer","devTools","process","persistore","persistStore","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.b9da5632.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"FilterForm_filterLabel__1oMaH\",\"filterInput\":\"FilterForm_filterInput__3GQCi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Kpt5\"};","import React from 'react';\nimport css from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={css.container}>{children}</div>;\n};\n\nexport default Container;\n","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('phonebook/add', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('phonebook/delete');\n\nexport const changeFilter = createAction('phonebook/changeFilter');","  \r\nexport const getContacts = state => state.phonebook.items;\r\nexport const getFilter = state => state.phonebook.filter;\r\n\r\nexport const getAddedContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport css from './ContactForm.module.css';\nimport { toast } from 'react-hot-toast';\nimport shortid from 'shortid';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = useRef(shortid.generate());\n  const numberId = useRef(shortid.generate());\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(con => con.name.toLowerCase() === name.toLowerCase())) {\n      toast(`'${name}' is alresdy in contacts`, {\n        icon: 'ðŸ“ž',\n        style: {\n          borderRadius: '10px',\n          background: '#666',\n          color: '#fff',\n        },\n      });\n      return;\n    }\n\n    if (contacts.find(con => con.number === number)) {\n      toast(`'${number}' is alresdy in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.label} htmlFor={nameId.current}>\n          Name\n          <input\n            className={css.inputName}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\" John Smith\"\n          />\n        </label>\n        <label className={css.label} htmlFor={numberId.current}>\n          Number\n          <input\n            className={css.inputNumber}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            placeholder=\" 111-11-11\"\n          />\n        </label>\n\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport { getAddedContacts } from '../../redux/contacts/contacts-selectors';\nimport css from './ContactList.module.css';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const addedContacts = useSelector(getAddedContacts);\n\n  const onRemoveContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={css.list}>\n      {addedContacts.map(({ id, name, number }) => (\n        <li className={css.listItem} key={id}>\n          <span className={css.listItemText}>{name}:</span>\n          <span className={css.listItemText}>{number}</span>\n          <button\n            className={css.button}\n            type=\"button\"\n            onClick={() => onRemoveContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport {getFilter} from '../../redux/contacts/contacts-selectors';\nimport css from './FilterForm.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  const onChange = e => dispatch(changeFilter(e.target.value));\n \n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Enter contact's name\"\n      />\n    </label>\n  );\n}\n\n\n","import Container from './Container/Container';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './FilterForm/FilterForm';\nimport { useSelector } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\nimport { getContacts } from '../redux/contacts/contacts-selectors';\n\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length !== 0 ? (\n        <Filter />\n      ) : (\n        <h3>Your contacts list is empty</h3>\n      )}\n      <ContactList />\n      <Toaster position=\"top-right\" />\n    </Container>\n  );\n}\n\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {addContact, deleteContact, changeFilter } from './contacts-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.ADD_CONTACT:\n//       return [...state, payload];\n//     case actionTypes.REMOVE_CONTACT:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.FILTER_CONTACT:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   items,\n//   filter,\n// });\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducers';\n\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  phonebook: persistReducer(contactsPersistConfig, contactsReducer),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistore = persistStore(store);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport { store, persistore } from './redux/store';\nimport 'normalize.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistore}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1A52l\",\"inputName\":\"ContactForm_inputName__1Sa_Q\",\"label\":\"ContactForm_label__19MWL\",\"inputNumber\":\"ContactForm_inputNumber__2aAaN\",\"button\":\"ContactForm_button__hnEPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__NLxo9\",\"button\":\"ContactList_button__3qVDL\"};"],"sourceRoot":""}